{"version":3,"sources":["Components/Form/index.js","Components/Lyrics/index.js","App.js","index.js"],"names":["handleSong","handleBand","handleSubmit","className","onSubmit","type","id","name","placeholder","onChange","band","song","loading","lyrics","App","useState","setSong","setBand","setLyrics","setLoading","e","a","preventDefault","spinner","findLyrics","lyricsResponse","json","data","error","console","log","fetch","role","normalize","str","toUpperCase","Form","target","value","Lyrics","ReactDOM","render","document","getElementById"],"mappings":"+LAEe,G,YAAA,gBAAGA,EAAH,EAAGA,WAAYC,EAAf,EAAeA,WAAYC,EAA3B,EAA2BA,aAA3B,OACb,0BACEC,UAAU,0CACVC,SAAUF,GAEV,2BACEG,KAAK,OACLF,UAAU,4BACVG,GAAG,OACHC,KAAK,OACLC,YAAY,OACZC,SAAUT,IAEZ,2BACEK,KAAK,OACLF,UAAU,4BACVG,GAAG,OACHC,KAAK,OACLC,YAAY,OACZC,SAAUR,IAEZ,4BAAQI,KAAK,SAASF,UAAU,wBAAhC,aCrBW,kBAAGO,EAAH,EAAGA,KAAMC,EAAT,EAASA,KAAMC,EAAf,EAAeA,QAASC,EAAxB,EAAwBA,OAAxB,OACbA,EACE,yBAAKV,UAAU,oBACb,yBAAKA,UAAU,iCACb,6BACc,oBAAXU,GACC,oCACE,4BACGH,EADH,MACYC,GAEZ,8BAGHE,KAILD,EACF,yBAAKT,UAAU,gBAAgBS,GAC7B,MC2CSE,MA1Df,WAAgB,IAAD,EACWC,qBADX,mBACNJ,EADM,KACAK,EADA,OAEWD,qBAFX,mBAENL,EAFM,KAEAO,EAFA,OAGeF,qBAHf,mBAGNF,EAHM,KAGEK,EAHF,OAIiBH,qBAJjB,mBAINH,EAJM,KAIGO,EAJH,KAcPjB,EAAY,uCAAG,WAAMkB,GAAN,iBAAAC,EAAA,6DACnBD,EAAEE,iBAEFJ,IACAC,EAAWI,GAJQ,kBAOYC,EAAWd,EAAMC,GAP7B,cAOXc,EAPW,gBAQEA,EAAeC,OARjB,QAQXC,EARW,QASRd,OACPK,EAAUS,EAAKd,QAEfK,EAAUS,EAAKC,OAZA,kDAejBC,QAAQC,IAAR,MAfiB,0DAAH,sDAmBZN,EAAa,SAACd,EAAMC,GACxB,OAAOoB,MAAM,6BAAD,OAA8BrB,EAA9B,YAAsCC,KAG9CY,EAAU,kBACd,yBAAKpB,UAAU,0BAA0B6B,KAAK,UAC5C,0BAAM7B,UAAU,WAAhB,gBAIE8B,EAAY,SAAAC,GAAG,OAAIA,EAAIC,eAE7B,OACE,6BACE,kBAACC,EAAD,CACEzB,KAAMA,EACNX,WA3Ca,SAAAoB,GACjBJ,EAAQiB,EAAUb,EAAEiB,OAAOC,SA2CvBrC,WAxCa,SAAAmB,GACjBH,EAAQgB,EAAUb,EAAEiB,OAAOC,SAwCvBpC,aAAcA,IAEhB,kBAACqC,EAAD,CAAQ7B,KAAMA,EAAMC,KAAMA,EAAMC,QAASA,EAASC,OAAQA,MCvDhE2B,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.04afd590.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default ({ handleSong, handleBand, handleSubmit }) => (\n  <form\n    className=\"form-inline justify-content-center mt-2\"\n    onSubmit={handleSubmit}\n  >\n    <input\n      type=\"text\"\n      className=\"form-control mb-2 mr-sm-2\"\n      id=\"song\"\n      name=\"song\"\n      placeholder=\"Song\"\n      onChange={handleSong}\n    />\n    <input\n      type=\"text\"\n      className=\"form-control mb-2 mr-sm-2\"\n      id=\"band\"\n      name=\"band\"\n      placeholder=\"Band\"\n      onChange={handleBand}\n    />\n    <button type=\"submit\" className=\"btn btn-primary mb-2\">\n      Search\n    </button>\n  </form>\n);\n","import React from \"react\";\n\nexport default ({ band, song, loading, lyrics }) =>\n  lyrics ? (\n    <div className=\"lyrics-container\">\n      <div className=\"lyrics justify-content-center\">\n        <pre>\n          {lyrics !== \"No lyrics found\" && (\n            <>\n              <h5>\n                {band} - {song}\n              </h5>\n              <hr />\n            </>\n          )}\n          {lyrics}\n        </pre>\n      </div>\n    </div>\n  ) : loading ? (\n    <div className=\"spinner mt-3\">{loading}</div>\n  ) : null;\n","import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./css/index.css\";\nimport Form from \"./Components/Form\";\nimport Lyrics from \"./Components/Lyrics\";\n\nfunction App() {\n  const [song, setSong] = useState();\n  const [band, setBand] = useState();\n  const [lyrics, setLyrics] = useState();\n  const [loading, setLoading] = useState();\n\n  const handleSong = e => {\n    setSong(normalize(e.target.value));\n  };\n\n  const handleBand = e => {\n    setBand(normalize(e.target.value));\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    setLyrics();\n    setLoading(spinner);\n\n    try {\n      const lyricsResponse = await findLyrics(band, song);\n      const data = await lyricsResponse.json();\n      if (data.lyrics) {\n        setLyrics(data.lyrics);\n      } else {\n        setLyrics(data.error);\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const findLyrics = (band, song) => {\n    return fetch(`https://api.lyrics.ovh/v1/${band}/${song}`);\n  };\n\n  const spinner = () => (\n    <div className=\"spinner-grow text-light\" role=\"status\">\n      <span className=\"sr-only\">Loading...</span>\n    </div>\n  );\n\n  const normalize = str => str.toUpperCase();\n\n  return (\n    <div>\n      <Form\n        song={song}\n        handleSong={handleSong}\n        handleBand={handleBand}\n        handleSubmit={handleSubmit}\n      />\n      <Lyrics band={band} song={song} loading={loading} lyrics={lyrics} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}